name: CI to GHCR and deploy to heroku

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    branches: [ "*" ]

# Set environment variables
env:
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
  APP_NAME: ${{ 'distribuidor-dj' }}
jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      -
        name: Login to ghcr
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile.real
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ghcr.io/diegosanchezp/distribuidor-dj:latest
          build-args: |
            building=true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2

      -
        name: Login to heroku registry
        run: docker login --username=_ --password=$HEROKU_API_KEY registry.heroku.com
      -
        name: Release to heroku
        run: |
          heroku container:push web -a $APP_NAME
          heroku container:release web -a $APP_NAME
